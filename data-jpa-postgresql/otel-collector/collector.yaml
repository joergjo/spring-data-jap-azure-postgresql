apiVersion: v1
kind: Secret
metadata:
  name: otel-collector-secrets
type: Opaque
stringData:
  DATADOG_API_KEY: "1a7d9154265612f908733fbf690bd4c7"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
        timeout: 10s
    exporters:
      datadog/api:
        hostname: "${HOSTNAME}"
        env: development
        api:
          key: "${DATADOG_API_KEY}"
          site: datadoghq.eu
    extensions:
      health_check:
    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [datadog/api]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [datadog/api]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  type: LoadBalancer
  ports:
  - name: otlp # Default endpoint for OpenTelemetry receiver.
    port: 4317
    protocol: TCP
    targetPort: otlp
  selector:
    component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 #TODO - adjust this to your own requirements
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - args:
          - "--config=/conf/otel-collector-config.yaml"
        image: otel/opentelemetry-collector-contrib:latest
        name: otel-collector
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 400Mi
        ports:
        - containerPort: 4317 # Default endpoint for Otlp/GRPC
          name: otlp
        envFrom:
        - secretRef:
            name: otel-collector-secrets
        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
      volumes:
      - configMap:
          name: otel-collector-conf
          items:
            - key: otel-collector-config
              path: otel-collector-config.yaml
        name: otel-collector-config-vol
