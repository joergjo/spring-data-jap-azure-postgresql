apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-todo-api
spec:
  selector:
    matchLabels:
      app: springboot-todo-api
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4004"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
      labels:
        app: springboot-todo-api
    spec:
      containers:
      - name: springboot-todo-api
        image: joergjoeu.azurecr.io/springboot-samples/data-jpa-postgresql
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 4004
          name: actuator
        envFrom:
        - secretRef:
            name: springboot-todo-api-secrets
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: actuator
          initialDelaySeconds: 5
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: actuator
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 512Mi
      nodeSelector:
        "beta.kubernetes.io/os": linux
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-todo-api
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
  selector:
    app: springboot-todo-api
